// vis_stream/protocol/visualization.proto
syntax = "proto3";

package visualization;

// --- 基础辅助类型 ---
message Vec2 {
  float x = 1;
  float y = 2;
}
message Vec3 {
  float x = 1;
  float y = 2;
  float z = 3;
}
message Quaternion {
  float w = 1;
  float x = 2;
  float y = 3;
  float z = 4;
}
message ColorRGBA {
  float r = 1;
  float g = 2;
  float b = 3;
  float a = 4;
}

message VertexList2D { repeated Vec2 vertices = 1; }
// --- 2D 几何体定义 ---
message Point2D { Vec2 position = 1; }
message Pose2D {
  Vec2 position = 1;
  float theta = 2;
}
message Circle {
  Vec2 center = 1;
  float radius = 2;
}
message Box2D {
  Pose2D center = 1;
  float width = 2;
  float length_front = 3;
  float length_rear = 4;
}
message Line2D { repeated Point2D points = 1; }
message Trajectory2D { repeated Box2D poses = 1; }
message Polygon { repeated Point2D vertices = 1; }

// --- 3D 几何体定义 ---
message Point3D { Vec3 position = 1; }
message Pose3D {
  Point3D position = 1;
  Quaternion quaternion = 2;
}
message Ball {
  Point3D center = 1;
  float radius = 2;
}
message Box3D {
  Pose3D center = 1;
  float x_length = 2;
  float y_length = 3;
  float z_length = 4;
}

// --- 材质与属性 ---
message Material {
  string legend = 1; // 用于图例显示
  ColorRGBA color = 2;
  float point_size = 3;
  float line_width = 4;
  bool filled = 5; // 用于2D形状，是否填充
  ColorRGBA fill_color = 6;
  bool legend_on = 7; // 用于是否显示图例
                      // 新增一个枚举来定义线型
  enum LineStyle {
    SOLID = 0;
    DASHED = 1;
    DOTTED = 2;
  }
  LineStyle line_style = 8; // 新增字段
}

// --- 核心指令 ---
message Add2DObject {
  string id = 1;
  Material material = 2;
  oneof geometry_data {
    Point2D point_2d = 3;
    Pose2D pose_2d = 4;
    Circle circle = 5;
    Box2D box_2d = 6;
    Line2D line_2d = 7;
    Trajectory2D trajectory_2d = 8;
    Polygon polygon = 9;
  }
}
message Add3DObject {
  string id = 1;
  Material material = 2;
  oneof geometry_data {
    Point2D point_2d = 3;
    Pose2D pose_2d = 4;
    Circle circle = 5;
    Box2D box_2d = 6;
    Line2D line_2d = 7;
    Trajectory2D trajectory_2d = 8;
    Polygon polygon = 9;
    Point3D point_3d = 10;
    Pose3D pose_3d = 11;
    Ball ball = 12;
    Box3D box_3d = 13;
  }
}
message Update2DObjectGeometry {
  string id = 1;
  oneof geometry_data {
    Point2D point_2d = 3;
    Pose2D pose_2d = 4;
    Circle circle = 5;
    Box2D box_2d = 6;
    Line2D line_2d = 7;
    Trajectory2D trajectory_2d = 8;
    Polygon polygon = 9;
  }
}
message Update3DObjectGeometry {
  string id = 1;
  oneof geometry_data {
    Point2D point_2d = 3;
    Pose2D pose_2d = 4;
    Circle circle = 5;
    Box2D box_2d = 6;
    Line2D line_2d = 7;
    Trajectory2D trajectory_2d = 8;
    Polygon polygon = 9;
    Point3D point_3d = 10;
    Pose3D pose_3d = 11;
    Ball ball = 12;
    Box3D box_3d = 13;
  }
}
message UpdateObjectProperties {
  string id = 1;
  Material material = 2;
}

message DeleteObject { string id = 1; }

// --- 窗口控制指令 ---
message SetGridVisible { bool visible = 1; }
message SetAxesVisible { bool visible = 1; }
message SetTitle { string title = 1; }
message SetLegend {
  bool visible = 1;         //是否显示图例
  ColorRGBA fill_color = 2; // 图例背景颜色
}
message Set2DAxisProperties {
  string x_label = 1; // X轴名称 (例如 "Time (s)")
  string y_label = 2; // Y轴名称 (例如 "Amplitude (V)")
  float x_min = 3;
  float x_max = 4;
  float y_min = 5;
  float y_max = 6;
  bool auto_scale = 7; // 是否自动根据数据调整范围
}

message Command2D {
  oneof command_type {
    Add2DObject add_object = 1;
    Update2DObjectGeometry update_object_geometry = 2;
    UpdateObjectProperties update_object_properties = 3;
    DeleteObject delete_object = 4;
    SetGridVisible set_grid_visible = 10;
    SetAxesVisible set_axes_visible = 11;
    SetTitle set_title = 12;
    SetLegend set_legend = 13;
    Set2DAxisProperties set_axis_properties = 14;
  }
}
message Command3D {
  oneof command_type {
    Add3DObject add_object = 1;
    Update3DObjectGeometry update_object_geometry = 2;
    UpdateObjectProperties update_object_properties = 3;
    DeleteObject delete_object = 4;
    SetGridVisible set_grid_visible = 10;
    SetAxesVisible set_axes_visible = 11;
    SetTitle set_title = 12;
    SetLegend set_legend = 13;
  }
}
message Scene2DUpdate {
  string window_id = 1;
  repeated Command2D commands = 2;
}

message Scene3DUpdate {
  string window_id = 1;
  repeated Command3D commands = 2;
}

// --- 顶级包装消息 ---
message VisMessage {
  oneof message_data {
    Scene2DUpdate scene_2d_update = 1;
    Scene3DUpdate scene_3d_update = 2;
  }
}